//===========================================================================
//                                                                           
// File: Interpolator.h                                                    
//                                                                           
// Created: Mon Oct 16 14:50:11 2000                                         
//                                                                           
// Author: Atgeirr F Rasmussen <atgeirr@sintef.no>
//                                                                           
// Revision: $Id: Interpolator.h,v 1.6 2009-05-13 07:30:49 vsk Exp $
//                                                                           
// Description: Base class for spline interpolators or approximators
//                                                                           
//===========================================================================

#ifndef _INTERPOLATOR_H
#define _INTERPOLATOR_H

#include <vector>
#include "GoTools/utils/config.h"

namespace Go
{

class BsplineBasis;

/// Base class for spline interpolators or approximators
class GO_API Interpolator
{
public:
    /// virtual desctructor assures safe inheritance
    virtual ~Interpolator();

    /// Interpolate or approximate a set of point data by a spline
    /// \param num_points the number of data points to approximate
    /// \param dimension the dimension of each data point
    /// \param param_start pointer to the array where the points' parameters
    ///                    are consecutively stored
    /// \param data_start pointer to the array where the points are consecutively
    ///                   stored
    /// \param coefs upon function completion, this vector will contain the 
    ///              control points of the interpolating (or approximating spline).
    ///              (In order to get access to the associated BsplineBasis, use
    ///              the function \ref basis().
    virtual void interpolate(int num_points,
			     int dimension,
			     const double* param_start,
			     const double* data_start,
			     std::vector<double>& coefs) = 0;
    
    /// after the function \ref interpolate() has been successfully run, this
    /// function can be called to get the BsplineBasis of the generated curve.
    /// \return a constant reference to the BsplineBasis of the curve previously 
    ///         generated by \ref interpolate().
    virtual const BsplineBasis& basis() = 0;
};

}

#endif // _INTERPOLATOR_H

