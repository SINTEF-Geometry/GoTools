Installation Instructions
*************************

Git
***

The gotools module points to a repository on GitHub:
https://github.com/SINTEF-Geometry/GoTools.git.

GoTools contains two submodules (on GitHub):
SISL: https://github.com/SINTEF-Geometry/SISL.git, and
TTL: https://github.com/SINTEF-Geometry/TTL.git.

To clone the GoTools module, run:

$ git clone --recursive https://github.com/SINTEF-Geometry/GoTools.git

Next the submodules must be initialized:

$ git submodule update --init

The branch 'master' is the development branch. After the end of
November it will be the only branch. Any releases will be available as
tags.

CMake
*****

This GoTools package uses CMake to generate a Makefile (on Linux)
or MS Visual Studio project file (on Windows).

For information on using CMake, see www.cmake.org.

As a Quick Start Guide, on Linux, make a build directory somewhere:

$ cd some_dir
$ mkdir build
$ cd build
$ ccmake <path_to_source_code>

Follow the instructions of 'ccmake' - the CMake "GUI". Then:

$ make
$ sudo make install

On Windows, add a new build folder somewhere. Start the CMake
executable and fill in the paths to the source and build folders. When
you run CMake, a Visual Studio project solution file will be generated
in the build folder.

Compilers
*********

The code uses certain features of the new C++ standard C++11, most
notably the smart pointer std::shared_ptr. It has been tested on GCC
4.7.3 on Linux and Visual Studio 2010 on Windows.

A set of options to control the build can be accessed in CMake (names
starting with 'GoTools'). For example, you can turn on/off building
the various modules by checking/unchecking
GoTools_COMPILE_MODULE_<modulename>.

Also provided is the option GoTools_USE_BOOST. If this option is
turned on, the building process uses boost::shared_ptr instead of
std::shared_ptr. If a C++11 compliant compiler is not available, you
may try this option and see if it works. Requires Boost:
www.boost.org.
